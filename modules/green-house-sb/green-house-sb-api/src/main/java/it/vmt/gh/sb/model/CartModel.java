/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.vmt.gh.sb.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the Cart service. Represents a row in the &quot;gh_Cart&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>it.vmt.gh.sb.model.impl.CartModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>it.vmt.gh.sb.model.impl.CartImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Cart
 * @generated
 */
@ProviderType
public interface CartModel
	extends BaseModel<Cart>, GroupedModel, ShardedModel, StagedAuditedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a cart model instance should use the {@link Cart} interface instead.
	 */

	/**
	 * Returns the primary key of this cart.
	 *
	 * @return the primary key of this cart
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this cart.
	 *
	 * @param primaryKey the primary key of this cart
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this cart.
	 *
	 * @return the uuid of this cart
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this cart.
	 *
	 * @param uuid the uuid of this cart
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the cart ID of this cart.
	 *
	 * @return the cart ID of this cart
	 */
	public long getCartId();

	/**
	 * Sets the cart ID of this cart.
	 *
	 * @param cartId the cart ID of this cart
	 */
	public void setCartId(long cartId);

	/**
	 * Returns the group ID of this cart.
	 *
	 * @return the group ID of this cart
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this cart.
	 *
	 * @param groupId the group ID of this cart
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this cart.
	 *
	 * @return the company ID of this cart
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this cart.
	 *
	 * @param companyId the company ID of this cart
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this cart.
	 *
	 * @return the user ID of this cart
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this cart.
	 *
	 * @param userId the user ID of this cart
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this cart.
	 *
	 * @return the user uuid of this cart
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this cart.
	 *
	 * @param userUuid the user uuid of this cart
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this cart.
	 *
	 * @return the user name of this cart
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this cart.
	 *
	 * @param userName the user name of this cart
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this cart.
	 *
	 * @return the create date of this cart
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this cart.
	 *
	 * @param createDate the create date of this cart
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this cart.
	 *
	 * @return the modified date of this cart
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this cart.
	 *
	 * @param modifiedDate the modified date of this cart
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the display date of this cart.
	 *
	 * @return the display date of this cart
	 */
	public Date getDisplayDate();

	/**
	 * Sets the display date of this cart.
	 *
	 * @param displayDate the display date of this cart
	 */
	public void setDisplayDate(Date displayDate);

	/**
	 * Returns the total of this cart.
	 *
	 * @return the total of this cart
	 */
	public double getTotal();

	/**
	 * Sets the total of this cart.
	 *
	 * @param total the total of this cart
	 */
	public void setTotal(double total);

	/**
	 * Returns the invoice discount of this cart.
	 *
	 * @return the invoice discount of this cart
	 */
	public boolean getInvoiceDiscount();

	/**
	 * Returns <code>true</code> if this cart is invoice discount.
	 *
	 * @return <code>true</code> if this cart is invoice discount; <code>false</code> otherwise
	 */
	public boolean isInvoiceDiscount();

	/**
	 * Sets whether this cart is invoice discount.
	 *
	 * @param invoiceDiscount the invoice discount of this cart
	 */
	public void setInvoiceDiscount(boolean invoiceDiscount);

	/**
	 * Returns the vat of this cart.
	 *
	 * @return the vat of this cart
	 */
	public double getVat();

	/**
	 * Sets the vat of this cart.
	 *
	 * @param vat the vat of this cart
	 */
	public void setVat(double vat);

	/**
	 * Returns the total with vat of this cart.
	 *
	 * @return the total with vat of this cart
	 */
	public double getTotalWithVat();

	/**
	 * Sets the total with vat of this cart.
	 *
	 * @param totalWithVat the total with vat of this cart
	 */
	public void setTotalWithVat(double totalWithVat);

	/**
	 * Returns the discounted total of this cart.
	 *
	 * @return the discounted total of this cart
	 */
	public double getDiscountedTotal();

	/**
	 * Sets the discounted total of this cart.
	 *
	 * @param discountedTotal the discounted total of this cart
	 */
	public void setDiscountedTotal(double discountedTotal);

	/**
	 * Returns the offer ID of this cart.
	 *
	 * @return the offer ID of this cart
	 */
	public long getOfferId();

	/**
	 * Sets the offer ID of this cart.
	 *
	 * @param offerId the offer ID of this cart
	 */
	public void setOfferId(long offerId);

	/**
	 * Returns the invoice ID of this cart.
	 *
	 * @return the invoice ID of this cart
	 */
	public long getInvoiceId();

	/**
	 * Sets the invoice ID of this cart.
	 *
	 * @param invoiceId the invoice ID of this cart
	 */
	public void setInvoiceId(long invoiceId);

	/**
	 * Returns the installation of this cart.
	 *
	 * @return the installation of this cart
	 */
	public boolean getInstallation();

	/**
	 * Returns <code>true</code> if this cart is installation.
	 *
	 * @return <code>true</code> if this cart is installation; <code>false</code> otherwise
	 */
	public boolean isInstallation();

	/**
	 * Sets whether this cart is installation.
	 *
	 * @param installation the installation of this cart
	 */
	public void setInstallation(boolean installation);

	/**
	 * Returns the installation total of this cart.
	 *
	 * @return the installation total of this cart
	 */
	public double getInstallationTotal();

	/**
	 * Sets the installation total of this cart.
	 *
	 * @param installationTotal the installation total of this cart
	 */
	public void setInstallationTotal(double installationTotal);

	/**
	 * Returns the delivery of this cart.
	 *
	 * @return the delivery of this cart
	 */
	public boolean getDelivery();

	/**
	 * Returns <code>true</code> if this cart is delivery.
	 *
	 * @return <code>true</code> if this cart is delivery; <code>false</code> otherwise
	 */
	public boolean isDelivery();

	/**
	 * Sets whether this cart is delivery.
	 *
	 * @param delivery the delivery of this cart
	 */
	public void setDelivery(boolean delivery);

	/**
	 * Returns the delivery total of this cart.
	 *
	 * @return the delivery total of this cart
	 */
	public double getDeliveryTotal();

	/**
	 * Sets the delivery total of this cart.
	 *
	 * @param deliveryTotal the delivery total of this cart
	 */
	public void setDeliveryTotal(double deliveryTotal);

	/**
	 * Returns the status of this cart.
	 *
	 * @return the status of this cart
	 */
	public int getStatus();

	/**
	 * Sets the status of this cart.
	 *
	 * @param status the status of this cart
	 */
	public void setStatus(int status);

}